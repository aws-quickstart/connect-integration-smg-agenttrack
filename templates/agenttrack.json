{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Post call surveys powered by SMG AgentTrack integration for Amazon Connect (qs-1ofbedn5m)",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "AgentTrack Parameters"
				},
				"Parameters": [
					"AgentTrackApiKey",
					"ConnectInstanceId",
					"FirehoseBucketName"
				]
			}],
			"ParameterLabels": {
				"AgentTrackApiKey": {
					"default": "Agent Track API Key"
				},
				"ConnectInstanceId": {
					"default": "Amazon Connect Instance Id"
				},
				"FirehoseBucketName": {
					"default": "AWS S3 Bucket Name for CTRs"
				}

			}
		}
	},
	"Parameters": {
		"AgentTrackApiKey": {
			"AllowedPattern": "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
			"Description": "AgentTrack API Key. Contains Upper and Lower case letters, Numbers and Dashes (-).",
			"ConstraintDescription": "Agent Track API key contains upper and lower case letters, numbers and dashes (-).",
			"Type": "String"
		},
		"ConnectInstanceId": {
			"AllowedPattern": "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
			"Description": "ID of your Connect Instance. Contains Upper and Lower case letters, Numbers and Dashes (-).",
			"ConstraintDescription": "Amazon Connect Instance ID contains upper and lower case letters, numbers and dashes (-).",
			"Type": "String"
		},
		"FirehoseBucketName": {
			"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
			"Description": "Name of the S3 Bucket where Firehose will PUT CTRs. Accepts Lower case letters, Numbers and Dashes.",
			"ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Type": "String"
		}
	},
	"Rules": {
		"RegionSupport": {
			"Assertions": [{
				"Assert": {
					"Fn::Contains": [
						[
							"us-east-1"
						],
						{
							"Ref": "AWS::Region"
						}
					]
				},
				"AssertDescription": "Supported regions: US East (N. Virginia) - us-east-1"
			}]
		}
	},
	"Resources": {
		"InvokeIntegrationTestFunction": {
			"Type": "Custom::InvokeIntegrationTestFunction",
			"Version": "1.0",
			"DependsOn": "SmgStackTestLambda",
			"Properties": {
				"apiKey": {
					"Fn::Sub": "${AgentTrackApiKey}"
				},
				"connectInstanceId": {
					"Fn::Sub": "${ConnectInstanceId}"
				},
				"ServiceToken": {
					"Fn::GetAtt": "SmgStackTestLambda.Arn"
				}
			}
		},
		"SmgLambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": [
								"lambda.amazonaws.com"
							]
						},
						"Action": [
							"sts:AssumeRole"
						]
					}]
				},
				"Path": "/",
				"RoleName": "SmgLambdaExecutionRole",
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess"
				]
			}
		},
		"SmgLambdaExecutionPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "SmgLambdaExecutionPolicy",
				"Roles": [{
					"Ref": "SmgLambdaExecutionRole"
				}],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
							"Effect": "Allow",
							"Action": "logs:CreateLogGroup",
							"Resource": {
								"Fn::Join": [
									"",
									[
										"arn:aws:logs:us-east-1:",
										{
											"Ref": "AWS::AccountId"
										},
										":*"
									]
								]
							}
						},
						{
							"Effect": "Allow",
							"Action": [
								"logs:CreateLogStream",
								"logs:PutLogEvents"
							],
							"Resource": [{
									"Fn::Join": [
										"",
										[
											"arn:aws:logs:us-east-1:",
											{
												"Ref": "AWS::AccountId"
											},
											":log-group:/aws/lambda/",
											{
												"Ref": "SmgNextQuestionLambda"
											},
											":*"
										]

									]
								},
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:logs:us-east-1:",
											{
												"Ref": "AWS::AccountId"
											},
											":log-group:/aws/lambda/",
											{
												"Ref": "SmgPushToSmgLambda"
											},
											":*"
										]

									]
								},
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:logs:us-east-1:",
											{
												"Ref": "AWS::AccountId"
											},
											":log-group:/aws/lambda/",
											{
												"Ref": "SmgStackTestLambda"
											},
											":*"
										]
									]
								}
							]
						}
					]
				}
			}
		},

		"SmgPushToSmgLambda": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": "tom.huguenard",
					"S3Key": "connect-integration-smg-agenttrack/functions/packages/SmgPushToSmgLambda/lambda.zip"
				},
				"Description": "Smg Push To Smg Lambda",
				"Environment": {
					"Variables": {
						"SURVEY_URL": "https://connect-api.smg.com/LambdaAccess/ProcessKinesisData",
						"SURVEY_APIKEY": {
							"Fn::Sub": "${AgentTrackApiKey}"
						}
					}
				},
				"Handler": "index.handler",
				"MemorySize": 128,
				"Role": {
					"Fn::GetAtt": [
						"SmgLambdaExecutionRole",
						"Arn"
					]
				},
				"Timeout": 10,
				"Runtime": "nodejs6.10"
			}
		},
		"SmgNextQuestionLambda": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": "tom.huguenard",
					"S3Key": "connect-integration-smg-agenttrack/functions/packages/SmgNextQuestionLambda/lambda.zip"
				},
				"Description": "Smg Next Survey Question Lambda",
				"Environment": {
					"Variables": {
						"SURVEY_URL": {
							"Fn::Sub": "https://connect-api.smg.com/LambdaAccess/NextQuestion/${AgentTrackApiKey}/SURVEYPROGRESS/CURRENTANSWER/PQUESTIONPREFIXTYPE"
						}
					}
				},
				"Handler": "index.handler",
				"MemorySize": 128,
				"Role": {
					"Fn::GetAtt": [
						"SmgLambdaExecutionRole",
						"Arn"
					]
				},
				"Timeout": 10,
				"Runtime": "nodejs6.10"
			}
		},
		"SmgStackTestLambda": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Handler": "index.quickstart",
				"Runtime": "nodejs6.10",
				"Description": "SMG AgentTrack integration test",
				"MemorySize": 128,
				"Timeout": 30,
				"Role": {
					"Fn::GetAtt": [
						"SmgLambdaExecutionRole",
						"Arn"
					]
				},
				"Code": {
					"S3Bucket": "tom.huguenard",
					"S3Key": "connect-integration-smg-agenttrack/functions/packages/IntegrationTest/lambda.zip"
				}
			}
		},
		"KeepSmgPushToSmgLambdaWarmEventRule": {
			"Type": "AWS::Events::Rule",
			"DependsOn": "SmgPushToSmgLambda",
			"Properties": {
				"Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
				"ScheduleExpression": "rate(10 minutes)",
				"State": "ENABLED",
				"Targets": [{
					"Arn": {
						"Fn::GetAtt": [
							"SmgPushToSmgLambda",
							"Arn"
						]
					},
					"Id": "SmgPushToSmgLambda",
					"Input": "{\"keepwarm\": true}"
				}]
			}
		},
		"KeepSmgNextQuestionLambdaWarmEventRule": {
			"Type": "AWS::Events::Rule",
			"DependsOn": "SmgNextQuestionLambda",
			"Properties": {
				"Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
				"ScheduleExpression": "rate(10 minutes)",
				"State": "ENABLED",
				"Targets": [{
					"Arn": {
						"Fn::GetAtt": [
							"SmgNextQuestionLambda",
							"Arn"
						]
					},
					"Id": "SmgNextQuestionLambda",
					"Input": "{\"keepwarm\": true}"
				}]
			}
		},
		"SmgLambdaConnectPermission": {
			"Type": "AWS::Lambda::Permission",
			"DependsOn": "SmgNextQuestionLambda",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Ref": "SmgNextQuestionLambda"
				},
				"Principal": "connect.amazonaws.com",
				"SourceAccount": {
					"Ref": "AWS::AccountId"
				},
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:aws:connect:us-east-1:",
							{
								"Ref": "AWS::AccountId"
							},
							":instance/",
							{
								"Ref": "ConnectInstanceId"
							}
						]
					]
				}
			}
		},
		"BucketInvokePolicy": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Ref": "SmgPushToSmgLambda"
				},
				"Principal": "s3.amazonaws.com",
				"SourceAccount": {
					"Ref": "AWS::AccountId"
				},
				"SourceArn": {
					"Fn::Join": ["", ["arn:aws:s3:::", {
						"Ref": "FirehoseBucketName"
					}]]
				}
			}
		},
		"SMGS3FirehoseBucket": {
			"Type": "AWS::S3::Bucket",
			"DependsOn": [
				"BucketInvokePolicy"
			],
			"Properties": {
				"AccessControl": "BucketOwnerFullControl",
				"BucketName": {
					"Ref": "FirehoseBucketName"
				},
				"NotificationConfiguration": {
					"LambdaConfigurations": [{
						"Event": "s3:ObjectCreated:*",
						"Function": {
							"Fn::GetAtt": ["SmgPushToSmgLambda", "Arn"]
						}
					}]
				}
			}
		},
		"SMGFirehoseAccessRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": "firehose.amazonaws.com"
						},
						"Action": "sts:AssumeRole",
						"Condition": {
							"StringEquals": {
								"sts:ExternalId": {
									"Ref": "AWS::AccountId"
								}
							}
						}
					}]
				}
			}
		},
		"SMGFirehoseDeliveryPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "smg-firehose-delivery",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": [
							"s3:AboutMultipartUpload",
							"s3:GetBucketLocation",
							"s3:GetObject",
							"s3:ListBucket",
							"s3:ListBucketMultipartUploads",
							"s3:PutObject"
						],
						"Resource": [{
								"Fn::Join": ["", ["arn:aws:s3:::", {
									"Ref": "FirehoseBucketName"
								}]]
							},
							{
								"Fn::Join": ["", ["arn:aws:s3:::", {
									"Ref": "FirehoseBucketName"
								}, "*"]]
							}
						]
					}]
				},
				"Roles": [{
					"Ref": "SMGFirehoseAccessRole"
				}]
			}
		},
		"SMGFirehose": {
			"Type": "AWS::KinesisFirehose::DeliveryStream",
			"Properties": {
				"DeliveryStreamName": "SMGFirehose",
				"S3DestinationConfiguration": {
					"BucketARN": {
						"Fn::GetAtt": ["SMGS3FirehoseBucket", "Arn"]
					},
					"BufferingHints": {
						"IntervalInSeconds": 60,
						"SizeInMBs": 1
					},
					"CompressionFormat": "UNCOMPRESSED",
					"RoleARN": {
						"Fn::GetAtt": ["SMGFirehoseAccessRole", "Arn"]
					}
				}
			}
		},
		"LambdaS3ReadPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "lambda-s3-read-only",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": [
							"s3:GetObject",
							"s3:ListBucket"
						],
						"Resource": [{
								"Fn::Join": ["", ["arn:aws:s3:::", {
									"Ref": "FirehoseBucketName"
								}]]
							},
							{
								"Fn::Join": ["", ["arn:aws:s3:::", {
									"Ref": "FirehoseBucketName"
								}, "*"]]
							}
						]
					}]
				},
				"Roles": [{
					"Ref": "SmgLambdaExecutionRole"
				}]
			}
		}
	},
	"Outputs": {
		"SmgPushToSmgLambda": {
			"Description": "The ARN of the SmgPushToSmgLambda Lambda",
			"Value": {
				"Fn::GetAtt": [
					"SmgPushToSmgLambda",
					"Arn"
				]
			}
		},
		"SmgNextQuestionLambda": {
			"Description": "The ARN of the SmgNextQuestionLambda Lambda",
			"Value": {
				"Fn::GetAtt": [
					"SmgNextQuestionLambda",
					"Arn"
				]
			}
		}
	}
}