{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "SMG AgentTrack Stack - Connect integration for Custom Agent/IVR Survey response analysis",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "SMG AgentTrack Parameters"
                    },
                    "Parameters": [
                        "AgentTrackApiKey",
                        "ConnectInstanceId"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "AgentTrackApiKey": {
            "AllowedPattern": "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "Description": "SMG AgentTrack API Key. Contains Upper and Lower case letters, Numbers and Dashes (-).",
            "Type": "String"
        },
        "ConnectInstanceId": {
            "AllowedPattern": "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "Description": "ID of your Connect Instance. Contains Upper and Lower case letters, Numbers and Dashes (-).",
            "Type": "String"
        }
    },
    "Resources": {
        "SmgLambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "SmgLambdaExecutionRole",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess"
                ]
            }
        },
        "SmgLambdaExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "SmgLambdaExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "SmgLambdaExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:us-east-1:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/SmgNextQuestionLambda:*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:us-east-1:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/SmgPushToSmgLambda:*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:us-east-1:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/SmgStackTestLambda:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "SmgKinesisStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "Name": "SmgKinesisStream",
                "RetentionPeriodHours": 24,
                "ShardCount": 1
            }
        },
        "SmgPushToSmgLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-smg-agenttrack/functions/packages/SmgPushToSmgLambda/lambda.zip"
                },
                "Description": "Smg Push To Smg Lambda",
                "Environment": {
                    "Variables": {
                        "SURVEY_URL": "https://connect.smg.com/ConnectSurveysAPI/LambdaAccess/ProcessKinesisData",
                        "SURVEY_APIKEY": {
                            "Fn::Sub": "${AgentTrackApiKey}"
                        }
                    }
                },
                "FunctionName": "SmgPushToSmgLambda",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "SmgLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "SmgNextQuestionLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-smg-agenttrack/functions/packages/SmgNextQuestionLambda/lambda.zip"
                },
                "Description": "Smg Next Survey Question Lambda",
                "Environment": {
                    "Variables": {
                        "SURVEY_URL": {
                            "Fn::Sub": "https://connect.smg.com/ConnectSurveysAPI/LambdaAccess/NextQuestion?apiKey=${AgentTrackApiKey}&surveyProgress=SURVEYPROGRESS&currentAnswer=CURRENTANSWER&previousQuestionPrefixType=PQUESTIONPREFIXTYPE"
                        }
                    }
                },
                "FunctionName": "SmgNextQuestionLambda",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "SmgLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "SmgLambdaEventMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 100,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::GetAtt": [
                        "SmgKinesisStream",
                        "Arn"
                    ]
                },
                "FunctionName": {
                    "Ref": "SmgPushToSmgLambda"
                },
                "StartingPosition": "LATEST"
            }
        },
        "SmgStackTestLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SmgPushToSmgLambda",
                "SmgNextQuestionLambda"
            ],
            "Properties": {
                "Handler": "test.quickstart",
                "Runtime": "nodejs6.10",
                "Description": "Checks for lambda deployment success",
                "Environment": {
                    "Variables": {}
                },
                "MemorySize": 128,
                "Timeout": 30,
                "Role": {
                    "Fn::GetAtt": [
                        "SmgLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-smg-agenttrack/functions/packages/integration-test/lambda.zip"
                }
            }
        },
        "KeepSmgPushToSmgLambdaWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "SmgPushToSmgLambda",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SmgPushToSmgLambda",
                                "Arn"
                            ]
                        },
                        "Id": "SmgPushToSmgLambda",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "KeepSmgNextQuestionLambdaWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "SmgNextQuestionLambda",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SmgNextQuestionLambda",
                                "Arn"
                            ]
                        },
                        "Id": "SmgNextQuestionLambda",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "SmgLambdaConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "SmgNextQuestionLambda",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:SmgNextQuestionLambda",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:us-east-1:",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        }
    }
}